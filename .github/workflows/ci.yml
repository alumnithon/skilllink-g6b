name: CI Build Main

on:
  push:
    branches:
      - main

env:
  # Database configuration
  MYSQL_IMAGE: mysql:8.0
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD || 'buildpassword' }}
  MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE || 'skilllink_build_db' }}
  MYSQL_HOST: 127.0.0.1
  MYSQL_PORT: ${{ vars.MYSQL_PORT || '3306' }}
  MYSQL_USER: root

  # Application configuration
  JWT_SECRET: ${{ secrets.JWT_SECRET || 'build_jwt_secret_for_ci' }}
  FRONTEND_CORS_URL: ${{ vars.FRONTEND_CORS_URL || '*' }}
  FRONTEND_REDIRECT_URL: ${{ vars.FRONTEND_REDIRECT_URL || 'http://localhost:5173' }}

  # Email configuration
  EMAIL_HOST: ${{ vars.EMAIL_HOST || 'smtp.example.com' }}
  EMAIL_PORT: ${{ vars.EMAIL_PORT || '587' }}
  EMAIL_USER: ${{ secrets.EMAIL_USER || 'build_user' }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS || 'build_password' }}

  # Artifact retention
  ARTIFACT_RETENTION_DAYS: ${{ vars.ARTIFACT_RETENTION_DAYS || '30' }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: $MYSQL_IMAGE
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h"${{ env.MYSQL_HOST }}" -P${{ env.MYSQL_PORT }} -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_ROOT_PASSWORD }} --silent; do
            echo 'Waiting for MySQL...'
            sleep 5
          done

      - name: Run quick verification tests
        env:
          DB_HOST: ${{ env.MYSQL_HOST }}
          DB_PORT: ${{ env.MYSQL_PORT }}
          DB_NAME: ${{ env.MYSQL_DATABASE }}
          DB_USER: ${{ env.MYSQL_USER }}
          DB_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          JWT_SECRET: ${{ env.JWT_SECRET }}
          FRONTEND_CORS_URL: ${{ env.FRONTEND_CORS_URL }}
          FRONTEND_REDIRECT_URL: ${{ env.FRONTEND_REDIRECT_URL }}
          EMAIL_HOST: ${{ env.EMAIL_HOST }}
          EMAIL_PORT: ${{ env.EMAIL_PORT }}
          EMAIL_USER: ${{ env.EMAIL_USER }}
          EMAIL_PASS: ${{ env.EMAIL_PASS }}
        run: mvn test -Dtest="**/SkilllinkApplicationTests"

      - name: Build project
        env:
          DB_HOST: ${{ env.MYSQL_HOST }}
          DB_PORT: ${{ env.MYSQL_PORT }}
          DB_NAME: ${{ env.MYSQL_DATABASE }}
          DB_USER: ${{ env.MYSQL_USER }}
          DB_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          JWT_SECRET: ${{ env.JWT_SECRET }}
          FRONTEND_CORS_URL: ${{ env.FRONTEND_CORS_URL }}
          FRONTEND_REDIRECT_URL: ${{ env.FRONTEND_REDIRECT_URL }}
          EMAIL_HOST: ${{ env.EMAIL_HOST }}
          EMAIL_PORT: ${{ env.EMAIL_PORT }}
          EMAIL_USER: ${{ env.EMAIL_USER }}
          EMAIL_PASS: ${{ env.EMAIL_PASS }}
        run: mvn package -DskipTests

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: Generate build info
        run: |
          echo "Build completed at: $(date)" > build-info.txt
          echo "Commit SHA: ${{ github.sha }}" >> build-info.txt
          echo "Branch: ${{ github.ref_name }}" >> build-info.txt
          echo "Build number: ${{ github.run_number }}" >> build-info.txt

      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: build-info.txt
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  # Optional: Add a job here for deployment preparation or notification
  notify_success:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Notify build success
        run: |
          echo "âœ… CI Build completed successfully!"
          echo "Artifact ready for deployment from main branch"
          echo "Build artifacts are available for 30 days"
